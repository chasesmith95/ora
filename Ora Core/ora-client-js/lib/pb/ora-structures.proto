
    message Event {
    Id = 1;    // unique event id
    Stream = 2;  //the stream that event is published to
    Service = 3; //service that event is using
    Type = 4; //type of event for the process
    Payload: //the data being sent in the message
    Prev: //reference event,
    Sign: //signature of the event by the publisher
    Meta: //any other metadata tags (for instance process, whether it can be disputed, etc)
    }



    enum Participant {
    System Clout: this will be the reputation of the participant in the Ora ecosystem
    Stream: this will be the stream that the user writes to.
    Public key:  this will act as the identifier of the user on the Ora network
    Private key: this will be used to sign events, and govern the user stream
    Service Subscriptions: this will be the aggregate and service pathway for updates from the service
    Plugins: this will be code snippets intended to be triggers for events from services
    }
